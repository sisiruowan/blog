<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 永不满足的唐格拉底</title>
    <link>https://sisiruowan.github.io/post/</link>
    <description>Recent content in Posts on 永不满足的唐格拉底</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you likes to quote or reproduce.</copyright>
    <lastBuildDate>Thu, 30 Nov 2017 08:34:55 +0800</lastBuildDate>
    
	<atom:link href="https://sisiruowan.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql 使用技巧</title>
      <link>https://sisiruowan.github.io/post/tools-skills/mysql-skill/</link>
      <pubDate>Thu, 30 Nov 2017 08:34:55 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/mysql-skill/</guid>
      <description>一、命令行操作  启动mysql-server:
mysql.server start 登录：
mysql -u root -p{password} {db_name} /home/works/db/mysql/bin/mysql -h {host} -P {port} -u root -p{password} -U {db_name} 导出数据库到文件
mysqldump -u root -p{password} {db_name} &amp;gt; filename 从文件导入数据库
mysql -u root -p{password} {db_name} &amp;lt; filename  二、常用sql语句  查看当前数据库
show databases； 查看表
show tables 查看表中内容
select * from table_name 添加字段
alter table {tbl_name} add {col_name} VARCHAR(16);  修改字段
alter table {tbl_name} modify {col_name} VARCHAR(16) NOT NULL;  更改列名</description>
    </item>
    
    <item>
      <title>Git 使用技巧</title>
      <link>https://sisiruowan.github.io/post/tools-skills/git-skill/</link>
      <pubDate>Wed, 29 Nov 2017 23:12:35 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/git-skill/</guid>
      <description>整理自廖雪峰的git教程  指定路径建立仓库：
cd PATH git init 添加文件
git add filename git add . # 添加当前目录所有可追踪文件 添加修改&amp;amp;修改说明：
git commit -m &amp;#34;the commit content&amp;#34; 查看代码库的状态：
git status 连接远程库：
git remote add origin https://github.com/sisiruowan/HighStockLearn.git git pull origin master git push origin master 查看具体文件的改动:
git diff filename 版本还原：
# 查看修改日志 git log # 精简输出： git log --pretty=oneline # 等号前后不要习惯性加空格 # 图像化查看log： git log --pretty=format:&amp;#34;%h %s&amp;#34; --graph # 启动还原指令 git reset --hard HEAD ^/^^/~100 # ^上一个版本 ^^上上个版本 ~100之前100个版本 git reset --hard commond ID # 强行通过commit的ID直接还原 暂存区是很重要的概念！！！ 所有修改通过add 加到暂存区， 再通过commit加到仓库中</description>
    </item>
    
    <item>
      <title>正则表达式技巧</title>
      <link>https://sisiruowan.github.io/post/tools-skills/re-skill/</link>
      <pubDate>Wed, 29 Nov 2017 22:51:59 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/re-skill/</guid>
      <description>\d 匹配一个数字：&#39;00\d&#39; 可以匹配 &#39;007&#39;、&#39;008&#39;等字符串 \w 匹配一个数字或者字母：&#39;\w\w\d&#39; 可以匹配 &#39;py3&#39; \s 匹配一个空格 . 匹配任何字符：&#39;py.&#39; 可以匹配 &#39;py2&#39; 或者&#39;py3&#39; 变长符号：
 * 表示任意个（包括0） + 表示至少一个 ? 表示0个或1个字符 {n} 表示n个字符 {n, m} 表示n - m个字符 示例：
&amp;#39;\d{3}\s+\d{3, 8}&amp;#39; # 三个数字+至少一个空格+3-8个数字，可以匹配任意空格分开的带区号的电话号码  使用方括号进行精确匹配：
[0-9a-zA-Z\_] # 匹配一个字母数字或者下划线 [0-9a-zA-Z\_]+ # 可以匹配至少由一个字母数字下划线组成的字符串 [a-zA-Z\_][0-9a-zA-Z\_]* # 字母或下划线开头，加上任意个字母数字下划线字符，即python中的合法变量 [a-zA-Z\_][0-9a-zA-Z\_]{0,19} # 限制长度为20个字符的变量名 \[A|B\]代表 A或B，\[P|p\]ython代表&#39;Python&#39;或&#39;python&#39;
 ^行开头匹配：^\d表示必须以数字开头
 $行结尾匹配：$\d表示必须以数字结尾
 注意：python本身用\做转义，所以直接使用python字符串必须用\\表示斜杠，为此使用r&#39;str&#39;取消转义
 re.match(r&#39;...&#39;,&#39;...&#39;)用于检测字符串是否匹配，不匹配返回None，匹配返回Match对象
 re.split()切分字符串：
s = &amp;#39;1 2 3 4&amp;#39; s.split(&amp;#39; &amp;#39;) &amp;gt;&amp;gt;&amp;gt;[&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;4&amp;#39;] re.</description>
    </item>
    
    <item>
      <title>Linux 使用技巧</title>
      <link>https://sisiruowan.github.io/post/tools-skills/linux-skill/</link>
      <pubDate>Wed, 29 Nov 2017 22:47:55 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/linux-skill/</guid>
      <description>ctrl + c/v仍旧是复制粘贴，但是终端中变为ctrl + shift + c/v;鼠标中键为快捷粘贴 清除/boot空间：
 查看当前内核版本：
uname -a 删除其他版本内核：
sudo apt-get remove linux-image-xxx-generic  查看当前boot大小：
sudo du -m /boot 修改文件夹权限
sudo chmod -R 777 XXXX 新机器添加新用户并加入sudoer list
# 添加新的用户 useradd -d /home/works -m works passwd works # 添加sudo文件写权限 chmod u+w /etc/sudoers vi /etc/sudoers # 允许用户执行sudo命令 works ALL=(ALL) ALL 安装zsh
# 安装zsh sudo apt-get install zsh # 安装oh-my-zsh sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;#34; 出现sudo: unable to resolve host XXXX</description>
    </item>
    
    <item>
      <title>Sublime Python环境搭建</title>
      <link>https://sisiruowan.github.io/post/tools-skills/sublime-python-env/</link>
      <pubDate>Wed, 29 Nov 2017 22:39:15 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/sublime-python-env/</guid>
      <description>一、正版激活  build3083版本license：
—– BEGIN LICENSE —– Andrew Weber Single User License EA7E-855605 813A03DD 5E4AD9E6 6C0EEB94 BC99798F 942194A6 02396E98 E62C9979 4BB979FE 91424C9D A45400BF F6747D88 2FB88078 90F5CC94 1CDC92DC 8457107A F151657B 1D22E383 A997F016 42397640 33F41CFC E1D0AE85 A0BBD039 0E9C8D55 E1B89D5D 5CDB7036 E56DE1C0 EFCC0840 650CD3A6 B98FC99C 8FAC73EE D2B95564 DF450523 —— END LICENSE ——  build3126版本license：
—– BEGIN LICENSE —– Michael Barnes Single User License EA7E-821385 8A353C41 872A0D5C DF9B2950 AFF6F667 C458EA6D 8EA3C286 98D1D650 131A97AB AA919AEC EF20E143 B361B1E7 4C8B7F04 B085E65E 2F5F5360 8489D422 FB8FC1AA 93F6323C FD7F7544 3F39C318 D95E6480 FCCC7561 8A4A1741 68FA4223 ADCEDE07 200C25BE DBBC4855 C4CFB774 C5EC138C 0FEC1CEF D9DCECEC D3A5DAD1 01316C36 —— END LICENSE ——  build3143版本license：</description>
    </item>
    
    <item>
      <title>Python技巧</title>
      <link>https://sisiruowan.github.io/post/tools-skills/python-skill/</link>
      <pubDate>Wed, 29 Nov 2017 22:05:11 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/python-skill/</guid>
      <description>同时遍历dict键和值：
# 使用 dict.items() for k,v in dict.items(): print k,v 巧用 or 关键字
&amp;gt;&amp;gt;&amp;gt; &amp;#39;&amp;#39; or &amp;#39;abc&amp;#39; &amp;#39;abc&amp;#39; &amp;gt;&amp;gt;&amp;gt; &amp;#39;a &amp;#39; or &amp;#39;abc&amp;#39; &amp;#39;a &amp;#39; 多行字符串：三个引号
&amp;gt;&amp;gt;&amp;gt; &amp;#39;&amp;#39;&amp;#39;line 1 line 2 line 3&amp;#39;&amp;#39;&amp;#39; &amp;gt;&amp;gt;&amp;gt; &amp;#39;line 1\nline 2\nline 3&amp;#39; 获得当前信息
import sys def get_cur_info(): print sys._getframe().f_code.co_filename #当前文件名，可以通过__file__获得 print sys._getframe(0).f_code.co_name #当前函数名 print sys._getframe(1).f_code.co_name　#调用该函数的函数的名字，如果没有被调用，则返回&amp;lt;module&amp;gt;，貌似call stack的栈低 print sys._getframe().f_lineno #当前行号 Python变量作用域说明：Python除了def/class/lambda 外，其他如: if/elif/else/ try/except for/while都不能改变变量作用域，外部仍旧能够访问。
# if/else case:b与a并列，else语句结束，b并未析构 a = 100 if a &amp;gt; 10: b = 10 else: b = -10 &amp;gt;&amp;gt;&amp;gt; b 10 字符串换行有两种方式，\和():</description>
    </item>
    
    <item>
      <title>【相对论】第一篇 时间和空间</title>
      <link>https://sisiruowan.github.io/post/little-white-physics/01/</link>
      <pubDate>Wed, 29 Nov 2017 21:38:36 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/little-white-physics/01/</guid>
      <description>写点什么好呢？</description>
    </item>
    
    <item>
      <title>常用命令&amp;环境配置</title>
      <link>https://sisiruowan.github.io/post/tools-skills/sys-cmd-and-env-cfg/</link>
      <pubDate>Wed, 29 Nov 2017 21:05:11 +0800</pubDate>
      
      <guid>https://sisiruowan.github.io/post/tools-skills/sys-cmd-and-env-cfg/</guid>
      <description>Linux&amp;amp;Mac  mysql操作
# 启动mysql mysql.server start # 登录命令 mysql -u root -pxxx /home/works/db/mysql/bin/mysql -h xxx.xxx.xxx.xxx -P 3306 -u root -pxxx -U im_saas_db /home/works/db/mysql/bin/mysql -h xxx.xxx.xxx.xxx -P 3306 -u root -pxxx -U xxx_db # 导出数据库 mysqldump -u root -pxxx xxx_db &amp;gt; xxx_db_dump.txt mysql -u root -p huishi_db &amp;lt; huishi_db_dump.txt # 安全删除 SET SQL_SAFE_UPDATES = 0; conda启用虚拟环境:
conda create -n tang requirements source activate tang source deactivate tang virtualenv启用虚拟环境：
cd到clone的repo目录 执行 virtualenv venv source venv/bin/activate pip install -r requirements.</description>
    </item>
    
  </channel>
</rss>